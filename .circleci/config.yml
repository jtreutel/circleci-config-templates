version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.0.0




jobs:
  oidc-test:
    docker:
      - image: cimg/base:2021.01
    parameters:
      role-arn:
        type: string
      role-session-name:
        type: string
      session-duration:
        type: string
        default: "3600"
    steps:
      - run:
          name: Generate shortlived AWS Keys using CircleCI OIDC token.
          environment:
            PARAM_AWS_CLI_ROLE_ARN: <<parameters.role-arn>>
            PARAM_ROLE_SESSION_NAME: <<parameters.role-session-name>>
            PARAM_SESSION_DURATION: <<parameters.session-duration>>
          command: |
            PARAM_ROLE_SESSION_NAME=$(eval echo "${PARAM_ROLE_SESSION_NAME}")

            read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
            "$(aws sts assume-role-with-web-identity \
            --role-arn "${PARAM_AWS_CLI_ROLE_ARN}" \
            --role-session-name "${PARAM_ROLE_SESSION_NAME}" \
            --web-identity-token "${CIRCLE_OIDC_TOKEN}" \
            --duration-seconds "${PARAM_SESSION_DURATION}" \
            --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
            --output text)"

            aws sts get-caller-identity

            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> "$BASH_ENV"
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> "$BASH_ENV"
            # echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> "$BASH_ENV"
            export AWS_SESSION_TOKEN





  oidc-second-job-test:
    docker:
      - image: cimg/base:2021.01
    steps:
      - attach_workspace:
          at: .
      - run: aws sts get-caller-identity

workflows:
  main:
    jobs:
      - oidc-test:
          role-arn: "arn:aws:iam::660990364978:role/jennings-oidc-demo"
          role-session-name: foobar
          context: empty-context
      - oidc-second-job-test:
          requires: 
            - oidc-test
