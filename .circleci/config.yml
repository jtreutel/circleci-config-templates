version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.0.0

commands:
  #this writes to bash env
  aws-oidc-setup:
    parameters:
      aws-region:
        type: string
        default: us-east-1  #this should be okay since this will only be used for the AWS STS command that retrieves credentials
      aws-oidc-role-arn:    #this should be the IAM role assigned to your AWS OIDC provider and audience
        type: string
      write-to-credentials:
        type: boolean
        default: false
    steps:
      - run:
          command: | 
            STS_RESPONSE=$(aws sts assume-role-with-web-identity \
            --role-arn <<parameters.aws-oidc-role-arn>> \
            --role-session-name ${CIRCLE_USERNAME}-${CIRCLE_SHA1:0:5} \
            --web-identity-token ${CIRCLE_OIDC_TOKEN})

            echo export AWS_ACCESS_KEY_ID="${STS_RESPONSE[0]}" >> $BASH_ENV
            echo export AWS_SECRET_ACCESS_KEY="${STS_RESPONSE[1]}" >> $BASH_ENV
            echo export AWS_SESSION_TOKEN="${STS_RESPONSE[2]}" >> $BASH_ENV

            if [ <<parameters.write-to-credentials>> ]; then \
              cat \<< EOF > ~/.aws/credentials
              [default]
              aws_access_key_id=${STS_RESPONSE[0]}
              aws_secret_access_key=${STS_RESPONSE[1]}
              aws_session_token=${STS_RESPONSE[2]}
              EOF \
            fi

            source $BASH_ENV
            aws sts get-caller-identity
            rm /tmp/aws-creds.txt


jobs:
  oidc-test:
    docker:
      - image: cimg/base:2021.01
    steps:
      - aws-cli/install
      - run:
          command: | 
            export AWS_OIDC_ROLE_ARN="arn:aws:iam::660990364978:role/jennings-oidc-demo"
            export AWS_REGION="ap-northeast-2"

            aws sts assume-role-with-web-identity \
            --role-arn ${AWS_OIDC_ROLE_ARN} \
            --role-session-name ${CIRCLE_USERNAME}-${CIRCLE_SHA1:0:5} \
            --web-identity-token ${CIRCLE_OIDC_TOKEN} > /tmp/aws-creds.txt

            export AWS_ACCESS_KEY_ID="$(cat /tmp/aws-creds.txt | jq -r ".Credentials.AccessKeyId")"
            export AWS_SECRET_ACCESS_KEY="$(cat /tmp/aws-creds.txt | jq -r ".Credentials.SecretAccessKey")"
            export AWS_SESSION_TOKEN="$(cat /tmp/aws-creds.txt | jq -r ".Credentials.SessionToken")"
            
            aws sts get-caller-identity
  oidc-test-2:
    docker:
      - image: cimg/base:2021.01
    steps:
      - aws-cli/install
      - aws-oidc-setup:
          aws-oidc-role-arn: arn:aws:iam::660990364978:role/jennings-oidc-demo
          write-to-credentials: true
      - run:
          command: aws sts get-caller-identity
      - persist_to_workspace:
          root: .
          path: .aws/credentials

  oidc-second-job-test:
    docker:
      - image: cimg/base:2021.01
    steps:
      - attach_workspace:
          at: .
      - run: aws sts get-caller-identity

workflows:
  main:
    jobs:
      - oidc-test-2:
          context: empty-context
      - oidc-second-job-test:
          requires: 
            - oidc-test-2